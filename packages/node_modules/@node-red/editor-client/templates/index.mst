<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8">
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0"/>
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="mobile-web-app-capable" content="yes">
<title>{{ page.title }}</title>
<link rel="icon" type="image/png" href="{{{ page.favicon }}}">
<link rel="mask-icon" href="{{{ page.tabicon.icon }}}" color="{{ page.tabicon.colour }}">
<link rel="stylesheet" href="vendor/jquery/css/base/jquery-ui.min.css?v={{ cacheBuster }}">
<link rel="stylesheet" href="vendor/font-awesome/css/font-awesome.min.css?v={{ cacheBuster }}">
<link rel="stylesheet" href="red/style.min.css?v={{ cacheBuster }}">
{{#page.css}}
<link rel="stylesheet" href="{{.}}">
{{/page.css}}
{{#asset.vendorMonaco}}
<link rel="stylesheet" href="vendor/monaco/style.css?v={{ cacheBuster }}">
{{/asset.vendorMonaco}}
<style>
    #main-header {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 40px;
        background-color: #333;
        color: #fff;
        display: flex;
        align-items: center;
        justify-content: space-between;
        padding: 0 20px;
        z-index: 1000;
        box-sizing: border-box;
    }

    .header-logo {
        font-size: 20px;
        white-space: nowrap;
    }

    .header-button {
        background-color: #555;
        color: #fff;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        white-space: nowrap;
    }

    #red-ui-editor {
        margin-top: 40px;
    }
</style>
</head>
<body spellcheck="false">
<header id="main-header">
  <div class="header-logo">Mi Logo</div>
  <button id="my-button" class="header-button">Guardar flujo</button>
</header>

<div id="red-ui-editor"></div>
<script src="vendor/vendor.js?v={{ cacheBuster }}"></script>
{{#asset.vendorMonaco}}
<script src="{{{ asset.vendorMonaco }}}?v={{ cacheBuster }}"></script>
{{/asset.vendorMonaco}}
<script src="{{{ asset.red }}}?v={{ cacheBuster }}"></script>
<script src="{{{ asset.main }}}?v={{ cacheBuster }}"></script>
{{# page.scripts }}
<script src="{{.}}"></script>
{{/ page.scripts }}
{{#sessionMessages}}
<script>RED.sessionMessages = {{{sessionMessages}}};</script>
{{/sessionMessages}}

<script>
    // Función para enviar el flujo al backend
    async function createNewFlow(datos) {
        try {
            const response = await fetch('http://localhost:3000/api/v1/flow/', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(datos)
            });
            if (response.ok) {
                return await response.json();
            } else {
                throw new Error('Error en la solicitud');
            }
        } catch (error) {
            console.error('Error al crear el flujo:', error);
            throw error;
        }
    }

    document.addEventListener('DOMContentLoaded', function() {
        const saveButton = document.getElementById('my-button');
        
        saveButton.addEventListener('click', function() {
            // Obtener el flujo actual de Node-RED
          const flow = RED.nodes.createCompleteNodeSet();
            
            // Crear los datos del nuevo flujo
            const datosNuevoRecurso = {
                name: 'nombre_del_flujo33',  // Puedes ajustar esto según tus necesidades
                description: 'descripción_del_flujo',  // Puedes ajustar esto según tus necesidades
            };
            
            // Realizar una solicitud POST al backend para guardar el flujo
            createNewFlow(datosNuevoRecurso)
                .then(nuevoRecurso => {
                    console.log('Flujo guardado con éxito:', nuevoRecurso);
                })
                .catch(error => {
                    console.error('Error al guardar el flujo:', error);
                });
        });
    });
</script>
</body>
</html>
